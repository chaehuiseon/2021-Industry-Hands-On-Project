{"version":3,"sources":["components/MenuImageStyled.tsx","components/MenuImage.tsx","components/CounterStyled.tsx","components/Counter.tsx","pages/detail/DetailStyled.ts","pages/detail/Detail.tsx","GlobalStyle.tsx","pages/home/HomeStyled.ts","components/MenuCardStyled.tsx","components/MenuCard.tsx","pages/home/menu/Menu.tsx","pages/home/Home.tsx","pages/login/LoginStyled.ts","pages/login/Login.tsx","pages/signup/Signup.tsx","App.tsx","index.tsx"],"names":["CardBox","styled","div","CardImage","img","MenuImage","image","src","CounterText","text","CounterButton1","button","CounterButton2","Counter","useState","count","setCount","onClick","TitleBar","TitleText","NameText","ImageBox","ContentBox","ContentText","CounterBox","CashButton","LinkHome","Detail","detailInfo","useLocation","state","ko_name","info","price","to","GlobalStyle","createGlobalStyle","Container","ButtonBar","OrderBox","OrderText","HistoryButton","svg","HistoryButtonText","CategoryBar","CategoryTitle","Divider","CategoryTab","tabId","categoryNum","MenuBox","CardText","MenuCard","like","history","useHistory","handleOnClick","useCallback","push","pathname","e","Menu","menuList","setCategoryNum","burgerMenu","menuData","sideMenu","dessertDrinkMenu","map","menu","index","Home","Error","h1","input","Success","Login","ID","setID","password","setPassword","loginError","setLoginError","loginSuccess","setLoginSuccess","onChangeID","target","value","onChangePassword","onSubmit","preventDefault","console","log","axios","post","id","headers","then","response","data","catch","error","className","type","placeholder","onChange","htmlFor","style","width","marginTop","href","Signup","name","setName","phone","setPhone","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","onChangeName","onChangePhone","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.619efd69.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const CardBox = styled.div`\n  display: grid;\n  grid-template-rows: 3fr 1fr 1fr;\n  justify-content: space-evenly;\n  margin-top: 10px;\n`\n\nexport const CardImage = styled.img<{ src: string }>`\n  src: src;\n  height: 6vw;\n  width: 6vw;\n  padding-bottom: 0.5vw;\n  alt: 'hamburger';\n`","/**\n * 관리자 메뉴에서도 사용할 예정이라 componenet로 따로 뻼\n */\n\n import React from 'react'\n import * as s from 'components/MenuImageStyled'\n \n type MenuProps = {\n   image: string\n }\n \n const MenuImage = ({ image }: MenuProps) => {\n   return (\n     <s.CardBox>\n       <s.CardImage src={image} />\n     </s.CardBox>\n   )\n }\n \n export default MenuImage\n ","import styled from 'styled-components'\n\nexport const CounterText = styled.text`\n  font-size: 25px;\n  color: black;\n`\n\nexport const CounterButton1 = styled.button`\n  font-size: 22px;\n  color: black;\n  margin-right: 10px;\n  border: solid 2px grey;\n  border-radius: 12px;\n  cursor: pointer;\n`\n\nexport const CounterButton2 = styled.button`\n  font-size: 22px;\n  color: black;\n  margin-left: 10px;\n  margin-right: 10px;\n  border: solid 2px grey;\n  border-radius: 12px;\n  cursor: pointer;\n`","import React, { useState } from 'react';\nimport * as s from 'components/CounterStyled';\n\nfunction Counter() {\n  const [count, setCount] = useState<number>(0);\n  const onIncrease = () => setCount(count + 1);\n  const onDecrease = () => setCount(count - 1);\n  return (\n      <div>\n        <s.CounterButton1 onClick={onIncrease}>+1</s.CounterButton1>\n        <s.CounterText>{count}</s.CounterText>\n        <s.CounterButton2 onClick={onDecrease}>-1</s.CounterButton2>\n        <s.CounterText>개</s.CounterText>\n      </div>\n  );\n}\n\nexport default Counter;","import styled from 'styled-components'\n\nexport const TitleBar = styled.div`\n  display: flex;\n  background-color: #004c97;\n  /* border: 1px solid black; */\n  padding-left: 15vw;\n  padding-top: 1vw;\n  padding-bottom: 1%;\n`\nexport const TitleText = styled.text`\n  font-size: 3.5vw;\n  color: white;\n`\n\nexport const NameText = styled.text`\n  font-size: 3vw;\n  color: black;\n  margin-top: 20px;\n`\n\nexport const ImageBox = styled.div`\n  display: grid;\n  justify-content: center;\n  margin-left: 15%;\n  margin-right: 15%;\n  background-color: white;\n`\n\nexport const ContentBox = styled.div`\n  // display: grid;\n  justify-content: center;\n  margin-top: 0;\n  margin-left: 15%;\n  margin-right: 15%;\n  padding-bottom: 3vw;\n  background-color: white;\n  border: 1px solid black;\n`\n\nexport const ContentText = styled.text`\n  font-size: 25px;\n  color: black;\n`\n\nexport const CounterBox = styled.div`\n  // display: grid;\n  justify-content: center;\n  margin-top: 0;\n  margin-left: 15%;\n  margin-right: 15%;\n  padding-bottom: 3vw;\n  background-color: white;\n`\n\nexport const CashButton = styled.button`\n  margin-left: 80%;\n  margin-right: 10px;\n  background: #004c97;\n  color: white;\n  font-size: 25px;\n  border: 1px solid white;\n  cursor: pointer;\n`\n\nexport const LinkHome = styled.button`\n  background: #004c97;\n  color: white;\n  font-size: 25px;\n  border: 1px solid white;\n  cursor: pointer;\n`","/**\n * Dummy\n * 메뉴에서 클릭 시 넘어옴\n * 메뉴에서 메뉴정보를 props로 가져와야 함\n */\n\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport MenuImage from 'components/MenuImage'\nimport Counter from 'components/Counter'\nimport * as s from 'pages/detail/DetailStyled'\n\nimport { useLocation } from 'react-router-dom'\n\ninterface MenuInfo {\n  ko_name: string\n  price: string\n  image: string\n  info: string\n  like: number\n}\n\ninterface ilocation {\n  detailInfo: MenuInfo\n}\nconst Detail = () => {\n  const location = useLocation<ilocation>()\n  const detailInfo = location.state.detailInfo\n  return (\n    <div>\n      <s.TitleBar>\n        <s.TitleText>CAU BURGER</s.TitleText>\n      </s.TitleBar>\n\n      <s.ImageBox>\n        <s.NameText>{detailInfo.ko_name}</s.NameText>\n        <MenuImage image={detailInfo.image} />\n      </s.ImageBox>\n\n      <s.ContentBox>\n        <s.ContentText>\n          구성 성분: {detailInfo.info}\n          <br />\n        </s.ContentText>\n        <s.ContentText>가격: {detailInfo.price}원</s.ContentText>\n      </s.ContentBox>\n\n      <s.CounterBox>\n        <Counter />\n        <s.CashButton>주문하기</s.CashButton>\n        <Link to=\"/home\">\n          <s.LinkHome>홈으로</s.LinkHome>\n        </Link>\n      </s.CounterBox>\n    </div>\n  )\n}\n\nexport default Detail\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Fira+Sans:400,500,600,700,800');\n\n* {\n  box-sizing: border-box;\n}\nbody {\n  background: #004C97 !important;\n  min-height: 100vh;\n  display: flex;\n  font-weight: 400;\n  font-family: 'Fira Sans', sans-serif;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nlabel,\nspan {\n  font-weight: 500;\n  font-family: 'Fira Sans', sans-serif;\n}\n\nbody,\nhtml,\n.App,\n#root,\n.auth-wrapper {\n  width: 100%;\n  height: 100%;\n}\n\n.navbar-light {\n  background-color: #ffffff;\n  box-shadow: 0px 14px 80px rgba(34, 35, 58, 0.2);\n}\n\n.auth-wrapper {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  text-align: left;\n}\n\n.auth-inner {\n  width: 450px;\n  margin: auto;\n  background: #ffffff;\n  box-shadow: 0px 14px 80px rgba(34, 35, 58, 0.2);\n  padding: 40px 55px 45px 55px;\n  border-radius: 15px;\n  transition: all 0.3s;\n}\n\n.auth-wrapper .form-control:focus {\n  border-color: #167bff;\n  box-shadow: none;\n}\n\n.auth-wrapper h3 {\n  text-align: center;\n  margin: 0;\n  line-height: 1;\n  padding-bottom: 20px;\n}\n\n.custom-control-label {\n  font-weight: 400;\n}\n\n.forgot-password,\n.forgot-password a {\n  text-align: right;\n  font-size: 13px;\n  padding-top: 10px;\n  color: #7f7d7d;\n  margin: 0;\n}\n\n.forgot-password a {\n  color: #167bff;\n}\n\n`\n\nexport default GlobalStyle\n","/**\n * -- Naming 규칙 --\n * 가로 한 줄은 Bar,\n * 큰 구분은 Box,\n * 카테고리 구분은 Tab,\n * Box, Bar, Tab 밑에 필요 시 Text,\n * Check 는 svg 넣을건데, 아직 안함\n */\n\nimport styled from 'styled-components'\n\nexport const TitleBar = styled.div`\n  display: flex;\n  background-color: #004c97;\n  /* border: 1px solid black; */\n  padding-left: 15vw;\n  padding-top: 1vw;\n  padding-bottom: 1%;\n`\nexport const TitleText = styled.text`\n  font-size: 3.5vw;\n  color: white;\n`\n\nexport const Container = styled.div`\n  background-color: #f0f0f0;\n  padding-top: 3%;\n  padding-bottom: 5%;\n`\n\nexport const ContentBox = styled.div`\n  display: grid;\n  margin-left: 15%;\n  margin-right: 15%;\n  padding-bottom: 3vw;\n  background-color: white;\n  box-shadow: 0 2.5rem 2rem -2rem hsl(200 50% 20% / 40%);\n`\n\nexport const ButtonBar = styled.div`\n  display: inline-grid;\n  width: 80%;\n  margin-left: 15%;\n  margin-right: 15%;\n  padding-left: 2vw;\n  padding-right: 2vw;\n  margin-bottom: 0.5vw;\n  grid-template-columns: 1fr 1fr 6fr;\n  /* border: 1px solid yellow; */\n`\n\nexport const OrderBox = styled.div`\n  display: flex;\n  /* border: 1px solid red; */\n`\n\nexport const OrderText = styled.text`\n  font-size: 1.5vw;\n`\nexport const OrderCheck = styled.svg``\n\nexport const HistoryButton = styled.div`\n  margin-left: 60%;\n  margin-right: 25%;\n  text-align: center;\n  font-size: 1.5vw;\n  border-radius: 0.7rem;\n  background-color: #004c97;\n`\nexport const HistoryButtonText = styled.text`\n  color: white;\n`\n\nexport const CategoryBar = styled.div`\n  display: inline-grid;\n  grid-template-columns: 6fr 1fr 1fr 1fr;\n  padding-bottom: 0.5vw;\n  padding-top: 1vw;\n  padding-right: 1.5vw;\n`\nexport const CategoryTitle = styled.div`\n  display: flex;\n  font-size: 2vw;\n  padding-left: 7%;\n`\n\nexport const Divider = styled.div`\n  width: 90%;\n  margin-left: 5%;\n  border-bottom: 3px solid #f0f0f0;\n`\n\nexport const CategoryTab = styled.div<{ tabId: number; categoryNum: number }>`\n  display: flex;\n  padding-top: 1vw;\n  font-size: 1.5vw;\n  /* border: 1px solid black; */\n  justify-content: center;\n  cursor: pointer;\n  color: #c0c0c0;\n  ${({ tabId, categoryNum }) =>\n    tabId === categoryNum &&\n    `\n    color: #004c97;\n  `}\n`\nexport const MenuBox = styled.div`\n  justify-content: space-evenly;\n  padding-top: 3vw;\n  margin-left: 3vw;\n  margin-right: 3vw;\n  display: grid;\n  column-gap: 5vw;\n  row-gap: 3vw;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n`\n","import styled from 'styled-components'\n\nexport const CardBox = styled.div`\n  display: grid;\n  grid-template-rows: 3fr 1fr 1fr;\n  justify-content: space-evenly;\n  cursor: pointer;\n`\n\nexport const CardImage = styled.img<{ src: string }>`\n  src: src;\n  height: 6vw;\n  width: 6vw;\n  padding-bottom: 0.5vw;\n  alt: 'hamburger';\n`\n\nexport const CardText = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 1vw;\n  /* border: 1px solid black; */\n`\n","/**\n * 관리자 메뉴에서도 사용할 예정이라 componenet로 따로 뻼\n */\n\nimport React, { useCallback } from 'react'\nimport * as s from 'components/MenuCardStyled'\nimport { useHistory } from 'react-router-dom'\n\ninterface MenuInfo {\n  ko_name: string\n  price: string\n  image: string\n  info: string\n  like: number\n}\n\nconst MenuCard = ({ image, ko_name, price, info, like }: MenuInfo) => {\n  const history = useHistory()\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const detailInfo: MenuInfo = {\n    ko_name: ko_name,\n    price: price,\n    image: image,\n    info: info,\n    like: like,\n  }\n\n  const handleOnClick = useCallback(\n    () =>\n      history.push({\n        pathname: '/detail',\n        state: {\n          detailInfo: detailInfo,\n        },\n      }),\n    [history, detailInfo]\n  )\n\n  return (\n    <s.CardBox onClick={(e) => handleOnClick()}>\n      <s.CardImage src={image} />\n      <s.CardText>{ko_name}</s.CardText>\n      <s.CardText>{price}원</s.CardText>\n    </s.CardBox>\n  )\n}\n\nexport default MenuCard\n","/**\n * 홈에서 메뉴를 렌더링 하는 페이지\n * 홈에서 category를 넘겨주면\n * category number를 가지고 API를 통해 정보 획득\n * ---> 미리 정의된 데이터를 가져오기로 함\n */\n\nimport * as s from 'pages/home/HomeStyled'\n\nimport MenuCard from 'components/MenuCard'\nimport * as menuData from 'assests/data.json'\n\ninterface MenuProps {\n  categoryNum: number\n  setCategoryNum: React.Dispatch<React.SetStateAction<number>>\n}\n\ninterface MenuInfo {\n  ko_name: string\n  price: string\n  image: string\n  info: string\n  like: number\n}\n\nconst Menu = ({ categoryNum, setCategoryNum }: MenuProps) => {\n  let menuList: MenuInfo[]\n  const burgerMenu = menuData.burger\n  const sideMenu = menuData.side\n  const dessertDrinkMenu = menuData.dessert_drink\n\n  if (categoryNum === 0) {\n    menuList = burgerMenu\n  } else if (categoryNum === 1) {\n    menuList = sideMenu\n  } else {\n    menuList = dessertDrinkMenu\n  }\n\n  return (\n    <>\n      <s.CategoryBar>\n        <s.CategoryTitle>메뉴</s.CategoryTitle>\n        <s.CategoryTab\n          tabId={0}\n          categoryNum={categoryNum}\n          onClick={(e) => setCategoryNum(0)}\n        >\n          버거\n        </s.CategoryTab>\n        <s.CategoryTab\n          tabId={1}\n          categoryNum={categoryNum}\n          onClick={(e) => setCategoryNum(1)}\n        >\n          사이드\n        </s.CategoryTab>\n        <s.CategoryTab\n          tabId={2}\n          categoryNum={categoryNum}\n          onClick={(e) => setCategoryNum(2)}\n        >\n          디저트\n        </s.CategoryTab>\n      </s.CategoryBar>\n      <s.Divider />\n      <s.MenuBox>\n        {menuList.map((menu, index) => (\n          <MenuCard\n            key={index}\n            image={menu.image}\n            ko_name={menu.ko_name}\n            price={menu.price}\n            info={menu.info}\n            like={menu.like}\n          />\n        ))}\n      </s.MenuBox>\n    </>\n  )\n}\n\nexport default Menu\n","/* \n  categoryNum => 0 : 버거, 1 : 사이드 , 2 : 디저트 \n  임시로 0 으로 해둠\n*/\n\nimport * as s from 'pages/home/HomeStyled'\n\nimport Menu from 'pages/home/menu/Menu'\nimport React from 'react'\nimport { useState } from 'react'\nconst Home = () => {\n  const [categoryNum, setCategoryNum] = useState(0)\n\n  return (\n    <div>\n      <s.TitleBar>\n        <s.TitleText>CAU BURGER</s.TitleText>\n      </s.TitleBar>\n      <s.Container>\n        <s.ButtonBar>\n          <s.OrderBox>\n            <s.OrderText>기본순</s.OrderText>\n          </s.OrderBox>\n          <s.OrderBox>\n            <s.OrderText>추천순</s.OrderText>\n          </s.OrderBox>\n          <s.HistoryButton>\n            <s.HistoryButtonText>주문내역</s.HistoryButtonText>\n          </s.HistoryButton>\n        </s.ButtonBar>\n        <s.ContentBox>\n          <Menu categoryNum={categoryNum} setCategoryNum={setCategoryNum} />\n        </s.ContentBox>\n      </s.Container>\n    </div>\n  )\n}\n\nexport default Home\n","import styled from 'styled-components'\n\nexport const LoginWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: #004c97;\n  width: 100vw;\n  height: 100vh;\n`\n\nexport const Title = styled.h1`\n  font-size: 60px;\n  font-weight: bold;\n  color: white;\n`\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`\n\nexport const InputTitle = styled.div`\n  font-size: 30px;\n  font-weight: bold;\n  color: white;\n  text-align: center;\n  width: 150px;\n`\nexport const Input = styled.input`\n  width: 350px;\n  height: 50px;\n  border-radius: 5px;\n  border: none;\n\n  ::placeholder,\n  ::-webkit-input-placeholder {\n    font-size: 30px;\n  }\n`\n\nexport const LoginButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  margin-top: 30px;\n`\nexport const LoginButton = styled.button`\n  font-size: 16px;\n  border: none;\n  width: 100px;\n  height: 50px;\n  border-radius: 5px;\n  background-color: D5D7DD;\n  color: #004c97;\n`\n\nexport const Error = styled.div`\n  color: red;\n`\nexport const Success = styled.div`\n  color: green;\n`\n","import * as S from './LoginStyled'\n\nimport { useCallback, useState } from 'react'\n\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nconst BASE_URL =\n  'https://asia-northeast3-cauburger-568d6.cloudfunctions.net/api'\n\nexport default function Login() {\n  const history = useHistory()\n  const [ID, setID] = useState('')\n  const [password, setPassword] = useState('')\n  const [loginError, setLoginError] = useState('')\n  const [loginSuccess, setLoginSuccess] = useState(false)\n\n  const onChangeID = useCallback((e: any) => {\n    setID(e.target.value)\n  }, [])\n\n  const onChangePassword = useCallback((e: any) => {\n    setPassword(e.target.value)\n  }, [])\n  const onSubmit = useCallback(\n    (e: any) => {\n      e.preventDefault()\n      console.log('ID: ', ID)\n      console.log('password: ', password)\n      setLoginError('')\n      setLoginSuccess(false)\n      axios\n        .post(\n          `${BASE_URL}/auth/signin`,\n          {\n            id: ID,\n            password: password,\n          },\n          {\n            headers: {\n              'Content-type': 'application/json',\n            },\n          }\n        )\n        .then((response) => {\n          console.log(response.data)\n          setLoginSuccess(true)\n          history.push('/home')\n        })\n        .catch((error) => {\n          console.log(error.response)\n          setLoginError(error.response.data)\n        })\n    },\n    [history, ID, password]\n  )\n\n  return (\n    <div className=\"auth-inner\">\n      <form onSubmit={onSubmit}>\n        <h3>Sign In</h3>\n        <div className=\"form-group\">\n          <label>ID</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter ID\"\n            value={ID}\n            onChange={onChangeID}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={onChangePassword}\n          />\n        </div>\n        {loginError && <S.Error>아이디와 비밀번호가 맞지 않습니다.</S.Error>}\n        {loginSuccess && <S.Success>로그인에 성공했습니다.</S.Success>}\n        <div className=\"form-group\">\n          <div className=\"custom-control custom-checkbox\">\n            <input\n              type=\"checkbox\"\n              className=\"custom-control-input\"\n              id=\"customCheck1\"\n            />\n            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\n              Remember me\n            </label>\n          </div>\n        </div>\n        {/* <Link to=\"/home\"> */}\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary btn-block\"\n          style={{ width: '100%', marginTop: '20px' }}\n        >\n          Sign In\n        </button>\n        {/* </Link> */}\n        <p className=\"forgot-password text-right\">\n          아직 회원이 아니신가요? <a href=\"/signup\">회원가입 하러가기</a>\n        </p>\n      </form>\n    </div>\n  )\n}\n","import * as S from '../login/LoginStyled'\n\nimport { useCallback, useState } from 'react'\n\nimport axios from 'axios'\n\nconst BASE_URL =\n  'https://asia-northeast3-cauburger-568d6.cloudfunctions.net/api'\n\nexport default function Signup() {\n  const [ID, setID] = useState('')\n  const [password, setPassword] = useState('')\n  const [name, setName] = useState('')\n  const [phone, setPhone] = useState('')\n  const [signUpError, setSignUpError] = useState('')\n  const [signUpSuccess, setSignUpSuccess] = useState(false)\n\n  const onChangeID = useCallback((e: any) => {\n    setID(e.target.value)\n  }, [])\n  const onChangePassword = useCallback((e: any) => {\n    setPassword(e.target.value)\n  }, [])\n  const onChangeName = useCallback((e: any) => {\n    setName(e.target.value)\n  }, [])\n  const onChangePhone = useCallback((e: any) => {\n    setPhone(e.target.value)\n  }, [])\n  const onSubmit = useCallback(\n    (e: any) => {\n      e.preventDefault()\n      console.log('ID: ', ID)\n      console.log('password: ', password)\n      console.log('name: ', name)\n      console.log('phone: ', phone)\n      setSignUpError('')\n      setSignUpSuccess(false)\n      axios\n        .post(\n          `${BASE_URL}/auth/signup`,\n          {\n            id: ID,\n            password: password,\n            name: name,\n            phone: phone,\n          },\n          {\n            headers: {\n              'Content-type': 'application/json',\n            },\n          }\n        )\n        .then((response) => {\n          console.log(response.data)\n          setSignUpSuccess(true)\n        })\n        .catch((error) => {\n          console.log(error.response)\n          setSignUpError(error.response.data)\n        })\n    },\n    [ID, password, name, phone]\n  )\n\n  return (\n    <div className=\"auth-inner\">\n      <form onSubmit={onSubmit}>\n        <h3>Sign Up</h3>\n\n        <div className=\"form-group\">\n          <label>ID</label>\n          <input\n            type=\"id\"\n            className=\"form-control\"\n            placeholder=\"Enter ID\"\n            value={ID}\n            onChange={onChangeID}\n          />\n        </div>\n        {!ID && <S.Error>아이디를 입력해주세요</S.Error>}\n        {signUpError && <S.Error>이미 가입된 아이디입니다.</S.Error>}\n\n        <div className=\"form-group\">\n          <label>Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={onChangePassword}\n          />\n        </div>\n        {!password && <S.Error>비밀번호를 입력해주세요</S.Error>}\n        <div className=\"form-group\">\n          <label>Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter Name\"\n            value={name}\n            onChange={onChangeName}\n          />\n        </div>\n        {!name && <S.Error>이름을 입력해주세요</S.Error>}\n\n        <div className=\"form-group\">\n          <label>Phone</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter Phone Number\"\n            value={phone}\n            onChange={onChangePhone}\n          />\n        </div>\n        {!phone && <S.Error>휴대폰 번호를 입력해주세요</S.Error>}\n        {signUpSuccess && (\n          <S.Success>회원가입에 성공했습니다! 로그인해주세요.</S.Success>\n        )}\n        {/* <Link to=\"/login\"> */}\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary btn-block\"\n          style={{ width: '100%', marginTop: '20px' }}\n        >\n          Sign Up\n        </button>\n        {/* </Link> */}\n        <p className=\"forgot-password text-right\">\n          이미 회원이신가요? <a href=\"/login\">로그인 하러가기</a>\n        </p>\n      </form>\n    </div>\n  )\n}\n","import '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\n\nimport Detail from 'pages/detail/Detail'\nimport GlobalStyle from './GlobalStyle'\nimport Home from 'pages/home/Home'\nimport Login from 'pages/login'\nimport Signup from 'pages/signup'\n\nfunction App() {\n  return (\n    <Router>\n      <GlobalStyle />\n      <div className=\"App\">\n        <div className=\"auth-wrapper\">\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/detail\" component={Detail} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}